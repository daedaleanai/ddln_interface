syntax = "proto2";

package ddln;

import "ddln_common.proto";

message CameraIntrinsics {
    required float verticalFieldOfView_deg = 1;
}

message SceneObject {
    optional string type = 1;
    optional Pose pose = 2; // pose in ENU coordinates
}

enum ImageFormat {
    BGR = 0; // Note: OpenCV works with BGR by default
    RGB = 1;
    BGRA = 2;
    RGBA = 3;
    GRAY = 4;
}

message Environment {
    message Clouds {
        enum Type {
            NONE = 0;
            ALTOCUMULUS = 1;
            CLOUDS_BASE = 2;
            CUMULUS = 3;
            NIMBOSTRATUS = 4;
            STRATOCUMULUS = 5;
            STRATUS = 6;
        }
        optional Type type = 1;
        optional float altitude_m = 2;
        optional Point3d velocity = 3; // Only use the directional x,y,z values to set the wind in the Engine.
    }
    optional Clouds clouds = 1;

    message Visibility {
        enum Type {
            NONE = 0;
            HAZE = 1;
            FOG = 2;
        }
        optional Type type = 1;
        optional float intensity = 2; // scaled 0-1.
    }
}

message ImageRequest {
    required ImageFormat format = 1;
    required uint32 width = 2;
    required uint32 height = 3;
    optional CameraIntrinsics intrinsics = 4;
    optional Pose extrinsics_WC = 5;
    repeated SceneObject objects = 6;
    enum Type {
        DEFAULT = 0; // regular image
        AUXILIARY = 1; // e.g. segmented image
    }
    optional Type type = 7;
    optional Environment environment = 8;
}

message ImageResponse {
    required bytes image = 1; // pixel array in requested format, 8UC1 for GRAY, 8UC3 for RGB/BGR, and so on.
}

message WorldInfo {
    optional string name = 1;
    optional Point3d home = 2; // position in ENU coordinates of the home (geo referenced) point.
    optional Point3d start = 3; // position in ENU coordinates of the SITL start location.
    optional LatLongAlt home_geo = 4;
}

service ImageService {
    rpc GenerateImage(ImageRequest) returns (ImageResponse);
    rpc GetWorldInfo(Empty) returns (WorldInfo);
}
