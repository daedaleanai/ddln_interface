syntax = "proto2";

package ddln;

import "ddln_common.proto";

message CameraIntrinsics {
    required float verticalFieldOfView_deg = 1;
}

message SceneObject {
    optional string type = 1;
    optional Pose pose = 2; // pose in ENU coordinates
}

enum ImageFormat {
    BGR = 0; // Note: OpenCV works with BGR by default
    RGB = 1;
    BGRA = 2;
    RGBA = 3;
    GRAY = 4;
}

message ImageRequest {
    required ImageFormat format = 1;
    required uint32 width = 2;
    required uint32 height = 3;
    optional CameraIntrinsics intrinsics = 4;
    optional Pose extrinsics_WC = 5;
    repeated SceneObject objects = 6;
}

message ImageResponse {
    required bytes image = 1; // pixel array in requested format, 8UC1 for GRAY, 8UC3 for RGB/BGR, and so on.
}

message WorldInfo {
    optional string name = 1;
    optional Point3d home = 2; // position in ENU coordinates of the home (geo referenced) point.
    optional Point3d start = 3; // position in ENU coordinates of the SITL start location.
}

service ImageService {
    rpc GenerateImage(ImageRequest) returns (ImageResponse);
    rpc GetWorldInfo(Empty) returns (WorldInfo);
}
